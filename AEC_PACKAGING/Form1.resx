<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>